package tj;

import com.tencent.thumbplayer.api.TPOptionalID;
import java.lang.reflect.Array;
import kotlin.UByte;
import kotlin.jvm.internal.ByteCompanionObject;
import okio.Utf8;
import org.bouncycastle.crypto.DataLengthException;
import org.bouncycastle.crypto.OutputLengthException;
import org.bouncycastle.crypto.c;
import org.bouncycastle.util.g;
import vj.c0;
/* loaded from: classes7.dex */
public class a implements org.bouncycastle.crypto.a {

    /* renamed from: i  reason: collision with root package name */
    private static final byte[] f58210i = {99, 124, 119, 123, -14, 107, 111, -59, 48, 1, 103, 43, -2, -41, -85, 118, -54, -126, -55, 125, -6, 89, 71, -16, -83, -44, -94, -81, -100, -92, 114, -64, -73, -3, -109, 38, 54, Utf8.REPLACEMENT_BYTE, -9, -52, 52, -91, -27, -15, 113, -40, 49, 21, 4, -57, 35, -61, 24, -106, 5, -102, 7, 18, ByteCompanionObject.MIN_VALUE, -30, -21, 39, -78, 117, 9, -125, 44, 26, 27, 110, 90, -96, 82, 59, -42, -77, 41, -29, 47, -124, 83, -47, 0, -19, 32, -4, -79, 91, 106, -53, -66, 57, 74, 76, 88, -49, -48, -17, -86, -5, 67, 77, 51, -123, 69, -7, 2, ByteCompanionObject.MAX_VALUE, 80, 60, -97, -88, 81, -93, 64, -113, -110, -99, 56, -11, -68, -74, -38, 33, 16, -1, -13, -46, -51, 12, 19, -20, 95, -105, 68, 23, -60, -89, 126, 61, 100, 93, 25, 115, 96, -127, 79, -36, 34, 42, -112, -120, 70, -18, -72, 20, -34, 94, 11, -37, -32, 50, 58, 10, 73, 6, 36, 92, -62, -45, -84, 98, -111, -107, -28, 121, -25, -56, 55, 109, -115, -43, 78, -87, 108, 86, -12, -22, 101, 122, -82, 8, -70, 120, 37, 46, 28, -90, -76, -58, -24, -35, 116, 31, 75, -67, -117, -118, 112, 62, -75, 102, 72, 3, -10, 14, 97, 53, 87, -71, -122, -63, 29, -98, -31, -8, -104, 17, 105, -39, -114, -108, -101, 30, -121, -23, -50, 85, 40, -33, -116, -95, -119, 13, -65, -26, 66, 104, 65, -103, 45, 15, -80, 84, -69, 22};

    /* renamed from: j  reason: collision with root package name */
    private static final byte[] f58211j = {82, 9, 106, -43, 48, 54, -91, 56, -65, 64, -93, -98, -127, -13, -41, -5, 124, -29, 57, -126, -101, 47, -1, -121, 52, -114, 67, 68, -60, -34, -23, -53, 84, 123, -108, 50, -90, -62, 35, 61, -18, 76, -107, 11, 66, -6, -61, 78, 8, 46, -95, 102, 40, -39, 36, -78, 118, 91, -94, 73, 109, -117, -47, 37, 114, -8, -10, 100, -122, 104, -104, 22, -44, -92, 92, -52, 93, 101, -74, -110, 108, 112, 72, 80, -3, -19, -71, -38, 94, 21, 70, 87, -89, -115, -99, -124, -112, -40, -85, 0, -116, -68, -45, 10, -9, -28, 88, 5, -72, -77, 69, 6, -48, 44, 30, -113, -54, Utf8.REPLACEMENT_BYTE, 15, 2, -63, -81, -67, 3, 1, 19, -118, 107, 58, -111, 17, 65, 79, 103, -36, -22, -105, -14, -49, -50, -16, -76, -26, 115, -106, -84, 116, 34, -25, -83, 53, -123, -30, -7, 55, -24, 28, 117, -33, 110, 71, -15, 26, 113, 29, 41, -59, -119, 111, -73, 98, 14, -86, 24, -66, 27, -4, 86, 62, 75, -58, -46, 121, 32, -102, -37, -64, -2, 120, -51, 90, -12, 31, -35, -88, 51, -120, 7, -57, 49, -79, 18, 16, 89, 39, ByteCompanionObject.MIN_VALUE, -20, 95, 96, 81, ByteCompanionObject.MAX_VALUE, -87, 25, -75, 74, 13, 45, -27, 122, -97, -109, -55, -100, -17, -96, -32, 59, 77, -82, 42, -11, -80, -56, -21, -69, 60, -125, 83, -103, 97, 23, 43, 4, 126, -70, 119, -42, 38, -31, 105, 20, 99, 85, 33, 12, 125};

    /* renamed from: k  reason: collision with root package name */
    private static final int[] f58212k = {1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, TPOptionalID.OPTION_ID_BEFORE_BOOL_ENABLE_NEW_DRM_CLIENT};

    /* renamed from: l  reason: collision with root package name */
    private static final int[] f58213l = {-1520213050, -2072216328, -1720223762, -1921287178, 234025727, -1117033514, -1318096930, 1422247313, 1345335392, 50397442, -1452841010, 2099981142, 436141799, 1658312629, -424957107, -1703512340, 1170918031, -1652391393, 1086966153, -2021818886, 368769775, -346465870, -918075506, 200339707, -324162239, 1742001331, -39673249, -357585083, -1080255453, -140204973, -1770884380, 1539358875, -1028147339, 486407649, -1366060227, 1780885068, 1513502316, 1094664062, 49805301, 1338821763, 1546925160, -190470831, 887481809, 150073849, -1821281822, 1943591083, 1395732834, 1058346282, 201589768, 1388824469, 1696801606, 1589887901, 672667696, -1583966665, 251987210, -1248159185, 151455502, 907153956, -1686077413, 1038279391, 652995533, 1764173646, -843926913, -1619692054, 453576978, -1635548387, 1949051992, 773462580, 756751158, -1301385508, -296068428, -73359269, -162377052, 1295727478, 1641469623, -827083907, 2066295122, 1055122397, 1898917726, -1752923117, -179088474, 1758581177, 0, 753790401, 1612718144, 536673507, -927878791, -312779850, -1100322092, 1187761037, -641810841, 1262041458, -565556588, -733197160, -396863312, 1255133061, 1808847035, 720367557, -441800113, 385612781, -985447546, -682799718, 1429418854, -1803188975, -817543798, 284817897, 100794884, -2122350594, -263171936, 1144798328, -1163944155, -475486133, -212774494, -22830243, -1069531008, -1970303227, -1382903233, -1130521311, 1211644016, 83228145, -541279133, -1044990345, 1977277103, 1663115586, 806359072, 452984805, 250868733, 1842533055, 1288555905, 336333848, 890442534, 804056259, -513843266, -1567123659, -867941240, 957814574, 1472513171, -223893675, -2105639172, 1195195770, -1402706744, -413311558, 723065138, -1787595802, -1604296512, -1736343271, -783331426, 2145180835, 1713513028, 2116692564, -1416589253, -2088204277, -901364084, 703524551, -742868885, 1007948840, 2044649127, -497131844, 487262998, 1994120109, 1004593371, 1446130276, 1312438900, 503974420, -615954030, 168166924, 1814307912, -463709000, 1573044895, 1859376061, -273896381, -1503501628, -1466855111, -1533700815, 937747667, -1954973198, 854058965, 1137232011, 1496790894, -1217565222, -1936880383, 1691735473, -766620004, -525751991, -1267962664, -95005012, 133494003, 636152527, -1352309302, -1904575756, -374428089, 403179536, -709182865, -2005370640, 1864705354, 1915629148, 605822008, -240736681, -944458637, 1371981463, 602466507, 2094914977, -1670089496, 555687742, -582268010, -591544991, -2037675251, -2054518257, -1871679264, 1111375484, -994724495, -1436129588, -666351472, 84083462, 32962295, 302911004, -1553899070, 1597322602, -111716434, -793134743, -1853454825, 1489093017, 656219450, -1180787161, 954327513, 335083755, -1281845205, 856756514, -1150719534, 1893325225, -1987146233, -1483434957, -1231316179, 572399164, -1836611819, 552200649, 1238290055, -11184726, 2015897680, 2061492133, -1886614525, -123625127, -2138470135, 386731290, -624967835, 837215959, -968736124, -1201116976, -1019133566, -1332111063, 1999449434, 286199582, -877612933, -61582168, -692339859, 974525996};

    /* renamed from: m  reason: collision with root package name */
    private static final int[] f58214m = {1353184337, 1399144830, -1012656358, -1772214470, -882136261, -247096033, -1420232020, -1828461749, 1442459680, -160598355, -1854485368, 625738485, -52959921, -674551099, -2143013594, -1885117771, 1230680542, 1729870373, -1743852987, -507445667, 41234371, 317738113, -1550367091, -956705941, -413167869, -1784901099, -344298049, -631680363, 763608788, -752782248, 694804553, 1154009486, 1787413109, 2021232372, 1799248025, -579749593, -1236278850, 397248752, 1722556617, -1271214467, 407560035, -2110711067, 1613975959, 1165972322, -529046351, -2068943941, 480281086, -1809118983, 1483229296, 436028815, -2022908268, -1208452270, 601060267, -503166094, 1468997603, 715871590, 120122290, 63092015, -1703164538, -1526188077, -226023376, -1297760477, -1167457534, 1552029421, 723308426, -1833666137, -252573709, -1578997426, -839591323, -708967162, 526529745, -1963022652, -1655493068, -1604979806, 853641733, 1978398372, 971801355, -1427152832, 111112542, 1360031421, -108388034, 1023860118, -1375387939, 1186850381, -1249028975, 90031217, 1876166148, -15380384, 620468249, -1746289194, -868007799, 2006899047, -1119688528, -2004121337, 945494503, -605108103, 1191869601, -384875908, -920746760, 0, -2088337399, 1223502642, -1401941730, 1316117100, -67170563, 1446544655, 517320253, 658058550, 1691946762, 564550760, -783000677, 976107044, -1318647284, 266819475, -761860428, -1634624741, 1338359936, -1574904735, 1766553434, 370807324, 179999714, -450191168, 1138762300, 488053522, 185403662, -1379431438, -1180125651, -928440812, -2061897385, 1275557295, -1143105042, -44007517, -1624899081, -1124765092, -985962940, 880737115, 1982415755, -590994485, 1761406390, 1676797112, -891538985, 277177154, 1076008723, 538035844, 2099530373, -130171950, 288553390, 1839278535, 1261411869, -214912292, -330136051, -790380169, 1813426987, -1715900247, -95906799, 577038663, -997393240, 440397984, -668172970, -275762398, -951170681, -1043253031, -22885748, 906744984, -813566554, 685669029, 646887386, -1530942145, -459458004, 227702864, -1681105046, 1648787028, -1038905866, -390539120, 1593260334, -173030526, -1098883681, 2090061929, -1456614033, -1290656305, 999926984, -1484974064, 1852021992, 2075868123, 158869197, -199730834, 28809964, -1466282109, 1701746150, 2129067946, 147831841, -420997649, -644094022, -835293366, -737566742, -696471511, -1347247055, 824393514, 815048134, -1067015627, 935087732, -1496677636, -1328508704, 366520115, 1251476721, -136647615, 240176511, 804688151, -1915335306, 1303441219, 1414376140, -553347356, -474623586, 461924940, -1205916479, 2136040774, 82468509, 1563790337, 1937016826, 776014843, 1511876531, 1389550482, 861278441, 323475053, -1939744870, 2047648055, -1911228327, -1992551445, -299390514, 902390199, -303751967, 1018251130, 1507840668, 1064563285, 2043548696, -1086863501, -355600557, 1537932639, 342834655, -2032450440, -2114736182, 1053059257, 741614648, 1598071746, 1925389590, 203809468, -1958134744, 1100287487, 1895934009, -558691320, -1662733096, -1866377628, 1636092795, 1890988757, 1952214088, 1113045200};

    /* renamed from: a  reason: collision with root package name */
    private int f58215a;

    /* renamed from: b  reason: collision with root package name */
    private int[][] f58216b = null;

    /* renamed from: c  reason: collision with root package name */
    private int f58217c;

    /* renamed from: d  reason: collision with root package name */
    private int f58218d;

    /* renamed from: e  reason: collision with root package name */
    private int f58219e;

    /* renamed from: f  reason: collision with root package name */
    private int f58220f;

    /* renamed from: g  reason: collision with root package name */
    private boolean f58221g;

    /* renamed from: h  reason: collision with root package name */
    private byte[] f58222h;

    private static int d(int i9) {
        return (((i9 & (-2139062144)) >>> 7) * 27) ^ ((2139062143 & i9) << 1);
    }

    private static int e(int i9) {
        int i10 = i9 & (-1061109568);
        int i11 = i10 ^ (i10 >>> 1);
        return (i11 >>> 5) ^ (((1061109567 & i9) << 2) ^ (i11 >>> 2));
    }

    private void f(int[][] iArr) {
        int i9 = this.f58217c;
        int i10 = this.f58215a;
        char c10 = 0;
        int i11 = i9 ^ iArr[i10][0];
        int i12 = 1;
        int i13 = this.f58218d ^ iArr[i10][1];
        int i14 = this.f58219e ^ iArr[i10][2];
        int i15 = i10 - 1;
        int i16 = iArr[i10][3] ^ this.f58220f;
        while (i15 > i12) {
            int[] iArr2 = f58214m;
            int k10 = (((iArr2[i11 & 255] ^ k(iArr2[(i16 >> 8) & 255], 24)) ^ k(iArr2[(i14 >> 16) & 255], 16)) ^ k(iArr2[(i13 >> 24) & 255], 8)) ^ iArr[i15][c10];
            int k11 = (((k(iArr2[(i11 >> 8) & 255], 24) ^ iArr2[i13 & 255]) ^ k(iArr2[(i16 >> 16) & 255], 16)) ^ k(iArr2[(i14 >> 24) & 255], 8)) ^ iArr[i15][i12];
            int k12 = (((k(iArr2[(i13 >> 8) & 255], 24) ^ iArr2[i14 & 255]) ^ k(iArr2[(i11 >> 16) & 255], 16)) ^ k(iArr2[(i16 >> 24) & 255], 8)) ^ iArr[i15][2];
            int k13 = k(iArr2[(i11 >> 24) & 255], 8) ^ ((iArr2[i16 & 255] ^ k(iArr2[(i14 >> 8) & 255], 24)) ^ k(iArr2[(i13 >> 16) & 255], 16));
            int i17 = i15 - 1;
            int i18 = k13 ^ iArr[i15][3];
            int k14 = (((iArr2[k10 & 255] ^ k(iArr2[(i18 >> 8) & 255], 24)) ^ k(iArr2[(k12 >> 16) & 255], 16)) ^ k(iArr2[(k11 >> 24) & 255], 8)) ^ iArr[i17][0];
            int k15 = (((iArr2[k11 & 255] ^ k(iArr2[(k10 >> 8) & 255], 24)) ^ k(iArr2[(i18 >> 16) & 255], 16)) ^ k(iArr2[(k12 >> 24) & 255], 8)) ^ iArr[i17][1];
            int k16 = ((iArr2[i18 & 255] ^ k(iArr2[(k12 >> 8) & 255], 24)) ^ k(iArr2[(k11 >> 16) & 255], 16)) ^ k(iArr2[(k10 >> 24) & 255], 8);
            int i19 = i17 - 1;
            i16 = iArr[i17][3] ^ k16;
            i11 = k14;
            i13 = k15;
            i14 = (((iArr2[k12 & 255] ^ k(iArr2[(k11 >> 8) & 255], 24)) ^ k(iArr2[(k10 >> 16) & 255], 16)) ^ k(iArr2[(i18 >> 24) & 255], 8)) ^ iArr[i17][2];
            i12 = 1;
            i15 = i19;
            c10 = 0;
        }
        int[] iArr3 = f58214m;
        int k17 = (((iArr3[i11 & 255] ^ k(iArr3[(i16 >> 8) & 255], 24)) ^ k(iArr3[(i14 >> 16) & 255], 16)) ^ k(iArr3[(i13 >> 24) & 255], 8)) ^ iArr[i15][0];
        int k18 = (((iArr3[i13 & 255] ^ k(iArr3[(i11 >> 8) & 255], 24)) ^ k(iArr3[(i16 >> 16) & 255], 16)) ^ k(iArr3[(i14 >> 24) & 255], 8)) ^ iArr[i15][1];
        int k19 = (((iArr3[i14 & 255] ^ k(iArr3[(i13 >> 8) & 255], 24)) ^ k(iArr3[(i11 >> 16) & 255], 16)) ^ k(iArr3[(i16 >> 24) & 255], 8)) ^ iArr[i15][2];
        int k20 = (k(iArr3[(i11 >> 24) & 255], 8) ^ ((iArr3[i16 & 255] ^ k(iArr3[(i14 >> 8) & 255], 24)) ^ k(iArr3[(i13 >> 16) & 255], 16))) ^ iArr[i15][3];
        byte[] bArr = f58211j;
        int i20 = bArr[k17 & 255] & UByte.MAX_VALUE;
        byte[] bArr2 = this.f58222h;
        this.f58217c = (((i20 ^ ((bArr2[(k20 >> 8) & 255] & UByte.MAX_VALUE) << 8)) ^ ((bArr2[(k19 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr[(k18 >> 24) & 255] << 24)) ^ iArr[0][0];
        this.f58218d = ((((bArr2[k18 & 255] & UByte.MAX_VALUE) ^ ((bArr2[(k17 >> 8) & 255] & UByte.MAX_VALUE) << 8)) ^ ((bArr[(k20 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr2[(k19 >> 24) & 255] << 24)) ^ iArr[0][1];
        this.f58219e = ((((bArr2[k19 & 255] & UByte.MAX_VALUE) ^ ((bArr[(k18 >> 8) & 255] & UByte.MAX_VALUE) << 8)) ^ ((bArr[(k17 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr2[(k20 >> 24) & 255] << 24)) ^ iArr[0][2];
        this.f58220f = ((((bArr[k20 & 255] & UByte.MAX_VALUE) ^ ((bArr2[(k19 >> 8) & 255] & UByte.MAX_VALUE) << 8)) ^ ((bArr2[(k18 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr2[(k17 >> 24) & 255] << 24)) ^ iArr[0][3];
    }

    private void g(int[][] iArr) {
        char c10 = 0;
        int i9 = this.f58217c ^ iArr[0][0];
        int i10 = 1;
        int i11 = this.f58218d ^ iArr[0][1];
        int i12 = this.f58219e ^ iArr[0][2];
        int i13 = this.f58220f ^ iArr[0][3];
        int i14 = 1;
        while (i14 < this.f58215a - i10) {
            int[] iArr2 = f58213l;
            int k10 = (((iArr2[i9 & 255] ^ k(iArr2[(i11 >> 8) & 255], 24)) ^ k(iArr2[(i12 >> 16) & 255], 16)) ^ k(iArr2[(i13 >> 24) & 255], 8)) ^ iArr[i14][c10];
            int k11 = (((k(iArr2[(i12 >> 8) & 255], 24) ^ iArr2[i11 & 255]) ^ k(iArr2[(i13 >> 16) & 255], 16)) ^ k(iArr2[(i9 >> 24) & 255], 8)) ^ iArr[i14][i10];
            int k12 = (((k(iArr2[(i13 >> 8) & 255], 24) ^ iArr2[i12 & 255]) ^ k(iArr2[(i9 >> 16) & 255], 16)) ^ k(iArr2[(i11 >> 24) & 255], 8)) ^ iArr[i14][2];
            int k13 = ((k(iArr2[(i9 >> 8) & 255], 24) ^ iArr2[i13 & 255]) ^ k(iArr2[(i11 >> 16) & 255], 16)) ^ k(iArr2[(i12 >> 24) & 255], 8);
            int i15 = i14 + 1;
            int i16 = k13 ^ iArr[i14][3];
            int k14 = (((iArr2[k10 & 255] ^ k(iArr2[(k11 >> 8) & 255], 24)) ^ k(iArr2[(k12 >> 16) & 255], 16)) ^ k(iArr2[(i16 >> 24) & 255], 8)) ^ iArr[i15][0];
            int k15 = (((iArr2[k11 & 255] ^ k(iArr2[(k12 >> 8) & 255], 24)) ^ k(iArr2[(i16 >> 16) & 255], 16)) ^ k(iArr2[(k10 >> 24) & 255], 8)) ^ iArr[i15][1];
            int k16 = ((iArr2[i16 & 255] ^ k(iArr2[(k10 >> 8) & 255], 24)) ^ k(iArr2[(k11 >> 16) & 255], 16)) ^ k(iArr2[(k12 >> 24) & 255], 8);
            int i17 = i15 + 1;
            int i18 = k16 ^ iArr[i15][3];
            i11 = k15;
            i10 = 1;
            i13 = i18;
            i9 = k14;
            i12 = (((iArr2[k12 & 255] ^ k(iArr2[(i16 >> 8) & 255], 24)) ^ k(iArr2[(k10 >> 16) & 255], 16)) ^ k(iArr2[(k11 >> 24) & 255], 8)) ^ iArr[i15][2];
            i14 = i17;
            c10 = 0;
        }
        int[] iArr3 = f58213l;
        int k17 = (((iArr3[i9 & 255] ^ k(iArr3[(i11 >> 8) & 255], 24)) ^ k(iArr3[(i12 >> 16) & 255], 16)) ^ k(iArr3[(i13 >> 24) & 255], 8)) ^ iArr[i14][0];
        int k18 = (((iArr3[i11 & 255] ^ k(iArr3[(i12 >> 8) & 255], 24)) ^ k(iArr3[(i13 >> 16) & 255], 16)) ^ k(iArr3[(i9 >> 24) & 255], 8)) ^ iArr[i14][1];
        int k19 = (((iArr3[i12 & 255] ^ k(iArr3[(i13 >> 8) & 255], 24)) ^ k(iArr3[(i9 >> 16) & 255], 16)) ^ k(iArr3[(i11 >> 24) & 255], 8)) ^ iArr[i14][2];
        int k20 = ((k(iArr3[(i9 >> 8) & 255], 24) ^ iArr3[i13 & 255]) ^ k(iArr3[(i11 >> 16) & 255], 16)) ^ k(iArr3[(i12 >> 24) & 255], 8);
        int i19 = i14 + 1;
        int i20 = k20 ^ iArr[i14][3];
        byte[] bArr = f58210i;
        int i21 = (bArr[k17 & 255] & UByte.MAX_VALUE) ^ ((bArr[(k18 >> 8) & 255] & UByte.MAX_VALUE) << 8);
        byte[] bArr2 = this.f58222h;
        this.f58217c = ((i21 ^ ((bArr2[(k19 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr2[(i20 >> 24) & 255] << 24)) ^ iArr[i19][0];
        this.f58218d = ((((bArr2[k18 & 255] & UByte.MAX_VALUE) ^ ((bArr[(k19 >> 8) & 255] & UByte.MAX_VALUE) << 8)) ^ ((bArr[(i20 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr2[(k17 >> 24) & 255] << 24)) ^ iArr[i19][1];
        this.f58219e = ((((bArr2[k19 & 255] & UByte.MAX_VALUE) ^ ((bArr[(i20 >> 8) & 255] & UByte.MAX_VALUE) << 8)) ^ ((bArr[(k17 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr[(k18 >> 24) & 255] << 24)) ^ iArr[i19][2];
        this.f58220f = ((((bArr2[i20 & 255] & UByte.MAX_VALUE) ^ ((bArr2[(k17 >> 8) & 255] & UByte.MAX_VALUE) << 8)) ^ ((bArr2[(k18 >> 16) & 255] & UByte.MAX_VALUE) << 16)) ^ (bArr[(k19 >> 24) & 255] << 24)) ^ iArr[i19][3];
    }

    private int[][] h(byte[] bArr, boolean z10) {
        int length = bArr.length;
        if (length < 16 || length > 32 || (length & 7) != 0) {
            throw new IllegalArgumentException("Key length not 128/192/256 bits.");
        }
        int i9 = length >>> 2;
        int i10 = i9 + 6;
        this.f58215a = i10;
        int[][] iArr = (int[][]) Array.newInstance(int.class, i10 + 1, 4);
        int i11 = 8;
        char c10 = 3;
        if (i9 == 4) {
            int e10 = g.e(bArr, 0);
            iArr[0][0] = e10;
            int e11 = g.e(bArr, 4);
            iArr[0][1] = e11;
            int e12 = g.e(bArr, 8);
            iArr[0][2] = e12;
            int e13 = g.e(bArr, 12);
            iArr[0][3] = e13;
            for (int i12 = 1; i12 <= 10; i12++) {
                e10 ^= l(k(e13, 8)) ^ f58212k[i12 - 1];
                iArr[i12][0] = e10;
                e11 ^= e10;
                iArr[i12][1] = e11;
                e12 ^= e11;
                iArr[i12][2] = e12;
                e13 ^= e12;
                iArr[i12][3] = e13;
            }
        } else if (i9 == 6) {
            int e14 = g.e(bArr, 0);
            iArr[0][0] = e14;
            int e15 = g.e(bArr, 4);
            iArr[0][1] = e15;
            int e16 = g.e(bArr, 8);
            iArr[0][2] = e16;
            int e17 = g.e(bArr, 12);
            iArr[0][3] = e17;
            int e18 = g.e(bArr, 16);
            int e19 = g.e(bArr, 20);
            int i13 = 1;
            int i14 = 1;
            while (true) {
                iArr[i13][0] = e18;
                iArr[i13][1] = e19;
                int l10 = l(k(e19, 8)) ^ i14;
                int i15 = i14 << 1;
                int i16 = e14 ^ l10;
                iArr[i13][2] = i16;
                int i17 = e15 ^ i16;
                iArr[i13][3] = i17;
                int i18 = e16 ^ i17;
                int i19 = i13 + 1;
                iArr[i19][0] = i18;
                int i20 = e17 ^ i18;
                iArr[i19][1] = i20;
                int i21 = e18 ^ i20;
                iArr[i19][2] = i21;
                int i22 = e19 ^ i21;
                iArr[i19][3] = i22;
                int l11 = l(k(i22, 8)) ^ i15;
                i14 = i15 << 1;
                e14 = i16 ^ l11;
                int i23 = i13 + 2;
                iArr[i23][0] = e14;
                e15 = i17 ^ e14;
                iArr[i23][1] = e15;
                e16 = i18 ^ e15;
                iArr[i23][2] = e16;
                e17 = i20 ^ e16;
                iArr[i23][3] = e17;
                i13 += 3;
                if (i13 >= 13) {
                    break;
                }
                e18 = i21 ^ e17;
                e19 = i22 ^ e18;
            }
        } else if (i9 != 8) {
            throw new IllegalStateException("Should never get here");
        } else {
            int e20 = g.e(bArr, 0);
            iArr[0][0] = e20;
            int e21 = g.e(bArr, 4);
            iArr[0][1] = e21;
            int e22 = g.e(bArr, 8);
            iArr[0][2] = e22;
            int e23 = g.e(bArr, 12);
            iArr[0][3] = e23;
            int e24 = g.e(bArr, 16);
            iArr[1][0] = e24;
            int e25 = g.e(bArr, 20);
            iArr[1][1] = e25;
            int e26 = g.e(bArr, 24);
            iArr[1][2] = e26;
            int e27 = g.e(bArr, 28);
            iArr[1][3] = e27;
            int i24 = 1;
            int i25 = 2;
            while (true) {
                int l12 = l(k(e27, i11)) ^ i24;
                i24 <<= 1;
                e20 ^= l12;
                iArr[i25][0] = e20;
                e21 ^= e20;
                iArr[i25][1] = e21;
                e22 ^= e21;
                iArr[i25][2] = e22;
                e23 ^= e22;
                iArr[i25][c10] = e23;
                int i26 = i25 + 1;
                if (i26 >= 15) {
                    break;
                }
                e24 ^= l(e23);
                iArr[i26][0] = e24;
                e25 ^= e24;
                iArr[i26][1] = e25;
                e26 ^= e25;
                iArr[i26][2] = e26;
                e27 ^= e26;
                iArr[i26][3] = e27;
                i25 = i26 + 1;
                i11 = 8;
                c10 = 3;
            }
        }
        if (!z10) {
            for (int i27 = 1; i27 < this.f58215a; i27++) {
                for (int i28 = 0; i28 < 4; i28++) {
                    iArr[i27][i28] = i(iArr[i27][i28]);
                }
            }
        }
        return iArr;
    }

    private static int i(int i9) {
        int k10 = k(i9, 8) ^ i9;
        int d10 = i9 ^ d(k10);
        int e10 = k10 ^ e(d10);
        return d10 ^ (e10 ^ k(e10, 16));
    }

    private void j(byte[] bArr, int i9) {
        int i10 = i9 + 1;
        int i11 = this.f58217c;
        bArr[i9] = (byte) i11;
        int i12 = i10 + 1;
        bArr[i10] = (byte) (i11 >> 8);
        int i13 = i12 + 1;
        bArr[i12] = (byte) (i11 >> 16);
        int i14 = i13 + 1;
        bArr[i13] = (byte) (i11 >> 24);
        int i15 = i14 + 1;
        int i16 = this.f58218d;
        bArr[i14] = (byte) i16;
        int i17 = i15 + 1;
        bArr[i15] = (byte) (i16 >> 8);
        int i18 = i17 + 1;
        bArr[i17] = (byte) (i16 >> 16);
        int i19 = i18 + 1;
        bArr[i18] = (byte) (i16 >> 24);
        int i20 = i19 + 1;
        int i21 = this.f58219e;
        bArr[i19] = (byte) i21;
        int i22 = i20 + 1;
        bArr[i20] = (byte) (i21 >> 8);
        int i23 = i22 + 1;
        bArr[i22] = (byte) (i21 >> 16);
        int i24 = i23 + 1;
        bArr[i23] = (byte) (i21 >> 24);
        int i25 = i24 + 1;
        int i26 = this.f58220f;
        bArr[i24] = (byte) i26;
        int i27 = i25 + 1;
        bArr[i25] = (byte) (i26 >> 8);
        bArr[i27] = (byte) (i26 >> 16);
        bArr[i27 + 1] = (byte) (i26 >> 24);
    }

    private static int k(int i9, int i10) {
        return (i9 << (-i10)) | (i9 >>> i10);
    }

    private static int l(int i9) {
        byte[] bArr = f58210i;
        return (bArr[(i9 >> 24) & 255] << 24) | (bArr[i9 & 255] & UByte.MAX_VALUE) | ((bArr[(i9 >> 8) & 255] & UByte.MAX_VALUE) << 8) | ((bArr[(i9 >> 16) & 255] & UByte.MAX_VALUE) << 16);
    }

    private void m(byte[] bArr, int i9) {
        int i10 = i9 + 1;
        int i11 = bArr[i9] & UByte.MAX_VALUE;
        this.f58217c = i11;
        int i12 = i10 + 1;
        int i13 = i11 | ((bArr[i10] & UByte.MAX_VALUE) << 8);
        this.f58217c = i13;
        int i14 = i12 + 1;
        int i15 = i13 | ((bArr[i12] & UByte.MAX_VALUE) << 16);
        this.f58217c = i15;
        int i16 = i14 + 1;
        this.f58217c = i15 | (bArr[i14] << 24);
        int i17 = i16 + 1;
        int i18 = bArr[i16] & UByte.MAX_VALUE;
        this.f58218d = i18;
        int i19 = i17 + 1;
        int i20 = ((bArr[i17] & UByte.MAX_VALUE) << 8) | i18;
        this.f58218d = i20;
        int i21 = i19 + 1;
        int i22 = i20 | ((bArr[i19] & UByte.MAX_VALUE) << 16);
        this.f58218d = i22;
        int i23 = i21 + 1;
        this.f58218d = i22 | (bArr[i21] << 24);
        int i24 = i23 + 1;
        int i25 = bArr[i23] & UByte.MAX_VALUE;
        this.f58219e = i25;
        int i26 = i24 + 1;
        int i27 = ((bArr[i24] & UByte.MAX_VALUE) << 8) | i25;
        this.f58219e = i27;
        int i28 = i26 + 1;
        int i29 = i27 | ((bArr[i26] & UByte.MAX_VALUE) << 16);
        this.f58219e = i29;
        int i30 = i28 + 1;
        this.f58219e = i29 | (bArr[i28] << 24);
        int i31 = i30 + 1;
        int i32 = bArr[i30] & UByte.MAX_VALUE;
        this.f58220f = i32;
        int i33 = i31 + 1;
        int i34 = ((bArr[i31] & UByte.MAX_VALUE) << 8) | i32;
        this.f58220f = i34;
        int i35 = i34 | ((bArr[i33] & UByte.MAX_VALUE) << 16);
        this.f58220f = i35;
        this.f58220f = (bArr[i33 + 1] << 24) | i35;
    }

    @Override // org.bouncycastle.crypto.a
    public void a(boolean z10, c cVar) {
        if (!(cVar instanceof c0)) {
            throw new IllegalArgumentException("invalid parameter passed to AES init - " + cVar.getClass().getName());
        }
        this.f58216b = h(((c0) cVar).a(), z10);
        this.f58221g = z10;
        if (z10) {
            this.f58222h = org.bouncycastle.util.a.e(f58210i);
        } else {
            this.f58222h = org.bouncycastle.util.a.e(f58211j);
        }
    }

    @Override // org.bouncycastle.crypto.a
    public int b() {
        return 16;
    }

    @Override // org.bouncycastle.crypto.a
    public int c(byte[] bArr, int i9, byte[] bArr2, int i10) {
        if (this.f58216b != null) {
            if (i9 + 16 <= bArr.length) {
                if (i10 + 16 <= bArr2.length) {
                    boolean z10 = this.f58221g;
                    m(bArr, i9);
                    int[][] iArr = this.f58216b;
                    if (z10) {
                        g(iArr);
                    } else {
                        f(iArr);
                    }
                    j(bArr2, i10);
                    return 16;
                }
                throw new OutputLengthException("output buffer too short");
            }
            throw new DataLengthException("input buffer too short");
        }
        throw new IllegalStateException("AES engine not initialised");
    }

    @Override // org.bouncycastle.crypto.a
    public String getAlgorithmName() {
        return "AES";
    }
}
